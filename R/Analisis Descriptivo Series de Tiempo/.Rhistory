set.seed(12)
n=200
serie=arima.sim(n=n,list(ar=(0.5)))
serie2=serie
serie2[50]=serie2[50]-6
par(mfrow=c(1,2))
plot(serie,ylim=c(-3,6),main="Serie original")
plot(serie2,ylim=c(-3,6),main="Outlier aditivo")
auto.arima(serie2)###Ajuste para el modelo con outlier
auto.arima(serie)###Ajuste para el modelo sin outlier
fit= arima(serie2,order=c(1,0,0),include.mean = F)
fit
resi= residuals(fit)
plot(resi)
coef= coefs2poly(fit)
coef
outliers= tsoutliers::locate.outliers(resi,coef)
outliers###tstat se compara con C=3
?tso####Detección automática de outliers, donde el modelo que se propone es via auto.arima
tso(serie2)
reticulate::repl_python()
n
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
knitr::opts_chunk$set(echo = TRUE)
r1=read.table("w-gs1yr.txt",header=T)[,4]
r3=read.table("w-gs3yr.txt",header=T)[,4]
head(r1)
head(r3)
str(r1)
tsr1=ts(r1,start=1962+5/365.25,frequency=365.25/7)
tsr3=ts(r3,start=1962+5/365.25,frequency=365.25/7)
ts.plot(tsr1,tsr3, gpars = list(col = c("black", "red")),ylab="porcentaje")
legend("topright", legend=c("tsr1", "tsr3"),
col=c("black", "red"), lty=1, cex=0.8)
str(tsr1)
tsc1=diff(tsr1)
tsc3=diff(tsr3)
ts.plot(tsc1,tsc3, gpars = list(col = c("black", "red")),ylab="porcentaje")
legend("topright", legend=c("tsc1", "tsc3"),
col=c("black", "red"), lty=1, cex=0.8)
par(mfrow=c(1,2))
plot(r1,r3,type='p',pch=16,sub = "(a) Variables Originales")
plot(tsc1,tsc3,type='p',pch=16,sub="(b) Variables en Cambios")
acf(r1)
acf(r3)
acf(tsc1)
acf(tsc3)
library(forecast)
forecast::Ccf(tsc1, tsc3, lag.max = 48)
library(astsa)
lag2.plot(tsc1, tsc3, max.lag = 4)
library(timetk)
library(tidyverse)
library(tsibble)
indice_semanal=as.Date(seq.Date(from = as.Date("1962-01-12"), # Starting date
length.out=2466,
by = "week") )
df_semanal_cambios=data.frame(Cambio1y=diff(r1),Cambio3y=diff(r3),Fechas=indice_semanal)
tstibble_semanal_cambios=as_tsibble(df_semanal_cambios) ##Detecta automáticamente la variable de fecha
tstibble_unificado_cambios=tstibble_semanal_cambios%>%pivot_longer(c(Cambio1y,Cambio3y),names_to="Serie",values_to = "Cambios")
tstibble_unificado_cambios%>%group_by(Serie)%>%timetk::plot_time_series(Fechas ,Cambios,.interactive  = FALSE)
summary(m2)
r1=read.table("w-gs1yr.txt",header=T)[,4]
r3=read.table("w-gs3yr.txt",header=T)[,4]
head(r1)
head(r3)
str(r1)
tsr1=ts(r1,start=1962+5/365.25,frequency=365.25/7)
tsr3=ts(r3,start=1962+5/365.25,frequency=365.25/7)
ts.plot(tsr1,tsr3, gpars = list(col = c("black", "red")),ylab="porcentaje")
legend("topright", legend=c("tsr1", "tsr3"),
col=c("black", "red"), lty=1, cex=0.8)
str(tsr1)
tsc1=diff(tsr1)
tsc3=diff(tsr3)
ts.plot(tsc1,tsc3, gpars = list(col = c("black", "red")),ylab="porcentaje")
legend("topright", legend=c("tsc1", "tsc3"),
col=c("black", "red"), lty=1, cex=0.8)
par(mfrow=c(1,2))
plot(r1,r3,type='p',pch=16,sub = "(a) Variables Originales")
plot(tsc1,tsc3,type='p',pch=16,sub="(b) Variables en Cambios")
acf(r1)
acf(r3)
acf(tsc1)
acf(tsc3)
library(forecast)
forecast::Ccf(tsc1, tsc3, lag.max = 48)
library(astsa)
lag2.plot(tsc1, tsc3, max.lag = 4)
m1=lm(r3~r1)
summary(m1)
###Residuales del modelo
plot(m1$residuals,type='l')
acf(m1$residuals,lag=36)
m2=lm(tsc3 ~ -1+tsc1)
summary(m2)
plot(m2$residuals,type='l')
acf(m2$residuals,lag.max =48,ci.type="ma")
pacf(m2$residuals,lag.max =48)
m3=arima(tsc3,order=c(0,0,1),xreg=tsc1,include.mean=F)
m3
library(lmtest)
coeftest(m3)
plot(m3$residuals)
acf(m3$residuals,lag.max = 48)
pacf(m3$residuals,lag.max = 48)
library(timetk)
library(tidyverse)
library(tsibble)
indice_semanal=as.Date(seq.Date(from = as.Date("1962-01-12"), # Starting date
length.out=2466,
by = "week") )
df_semanal_cambios=data.frame(Cambio1y=diff(r1),Cambio3y=diff(r3),Fechas=indice_semanal)
tstibble_semanal_cambios=as_tsibble(df_semanal_cambios) ##Detecta automáticamente la variable de fecha
tstibble_unificado_cambios=tstibble_semanal_cambios%>%pivot_longer(c(Cambio1y,Cambio3y),names_to="Serie",values_to = "Cambios")
tstibble_unificado_cambios%>%group_by(Serie)%>%timetk::plot_time_series(Fechas ,Cambios,.interactive  = FALSE)
summary(m2)
plot(m2$residuals,type='l')
acf(m2$residuals,lag.max =48,ci.type="ma")
pacf(m2$residuals,lag.max =48)
###Parece que que un MA(7) debería ser ajustado o un AR(7)
Ajuste_arima_res=Arima(m2$residuals,order=c(0,0,1),include.mean = F)#,fixed=c(NA,0,0,NA,NA,NA,NA)
coeftest(Ajuste_arima_res)
corr = nlme::corARMA(value=c(0.18),p = 0, q = 1)
salida_concorrelacion=nlme::gls(Cambio3y ~-1+ Cambio1y,tstibble_semanal_cambios,correlation = corr)
knitr::opts_chunk$set(echo = TRUE)
r1=read.table("w-gs1yr.txt",header=T)[,4]
r3=read.table("w-gs3yr.txt",header=T)[,4]
head(r1)
head(r3)
str(r1)
tsr1=ts(r1,start=1962+5/365.25,frequency=365.25/7)
tsr3=ts(r3,start=1962+5/365.25,frequency=365.25/7)
ts.plot(tsr1,tsr3, gpars = list(col = c("black", "red")),ylab="porcentaje")
legend("topright", legend=c("tsr1", "tsr3"),
col=c("black", "red"), lty=1, cex=0.8)
str(tsr1)
tsc1=diff(tsr1)
tsc3=diff(tsr3)
ts.plot(tsc1,tsc3, gpars = list(col = c("black", "red")),ylab="porcentaje")
legend("topright", legend=c("tsc1", "tsc3"),
col=c("black", "red"), lty=1, cex=0.8)
par(mfrow=c(1,2))
plot(r1,r3,type='p',pch=16,sub = "(a) Variables Originales")
plot(tsc1,tsc3,type='p',pch=16,sub="(b) Variables en Cambios")
acf(r1)
acf(r3)
acf(tsc1)
acf(tsc3)
library(forecast)
forecast::Ccf(tsc1, tsc3, lag.max = 48)
library(astsa)
lag2.plot(tsc1, tsc3, max.lag = 4)
m1=lm(r3~r1)
summary(m1)
###Residuales del modelo
plot(m1$residuals,type='l')
acf(m1$residuals,lag=36)
m2=lm(tsc3 ~ -1+tsc1)
summary(m2)
plot(m2$residuals,type='l')
acf(m2$residuals,lag.max =48,ci.type="ma")
pacf(m2$residuals,lag.max =48)
library(timetk)
library(tidyverse)
library(tsibble)
indice_semanal=as.Date(seq.Date(from = as.Date("1962-01-12"), # Starting date
length.out=2466,
by = "week") )
df_semanal_cambios=data.frame(Cambio1y=diff(r1),Cambio3y=diff(r3),Fechas=indice_semanal)
tstibble_semanal_cambios=as_tsibble(df_semanal_cambios) ##Detecta automáticamente la variable de fecha
tstibble_unificado_cambios=tstibble_semanal_cambios%>%pivot_longer(c(Cambio1y,Cambio3y),names_to="Serie",values_to = "Cambios")
tstibble_unificado_cambios%>%group_by(Serie)%>%timetk::plot_time_series(Fechas ,Cambios,.interactive  = FALSE)
summary(m2)
plot(m2$residuals,type='l')
acf(m2$residuals,lag.max =48,ci.type="ma")
pacf(m2$residuals,lag.max =48)
###Parece que que un MA(7) debería ser ajustado o un AR(7)
Ajuste_arima_res=Arima(m2$residuals,order=c(0,0,1),include.mean = F)#,fixed=c(NA,0,0,NA,NA,NA,NA)
coeftest(Ajuste_arima_res)
?lmtest
library(timetk)
library(tidyverse)
library(tsibble)
library(lmtest)
indice_semanal=as.Date(seq.Date(from = as.Date("1962-01-12"), # Starting date
length.out=2466,
by = "week") )
df_semanal_cambios=data.frame(Cambio1y=diff(r1),Cambio3y=diff(r3),Fechas=indice_semanal)
tstibble_semanal_cambios=as_tsibble(df_semanal_cambios) ##Detecta automáticamente la variable de fecha
tstibble_unificado_cambios=tstibble_semanal_cambios%>%pivot_longer(c(Cambio1y,Cambio3y),names_to="Serie",values_to = "Cambios")
tstibble_unificado_cambios%>%group_by(Serie)%>%timetk::plot_time_series(Fechas ,Cambios,.interactive  = FALSE)
summary(m2)
plot(m2$residuals,type='l')
acf(m2$residuals,lag.max =48,ci.type="ma")
pacf(m2$residuals,lag.max =48)
###Parece que que un MA(7) debería ser ajustado o un AR(7)
Ajuste_arima_res=Arima(m2$residuals,order=c(0,0,1),include.mean = F)#,fixed=c(NA,0,0,NA,NA,NA,NA)
coeftest(Ajuste_arima_res)
#corr = nlme::corARMA(value=c(0.18),p = 0, q = 1)
#salida_concorrelacion=nlme::gls(Cambio3y ~-1+ Cambio1y,tstibble_semanal_cambios,correlation = corr)
#salida_concorrelacion
#coeftest(salida_concorrelacion)
corr = nlme::corARMA(value=c(0.18),p = 0, q = 1)
corr
salida_concorrelacion=nlme::gls(Cambio3y ~-1+ Cambio1y,tstibble_semanal_cambios,correlation = corr)
salida_concorrelacion
plot(r1,r3,type='p',pch=16,sub = "(a) Variables Originales")
acf(r1)
acf(r3)
library(forecast)
forecast::Ccf(r1, r3, lag.max = 48)
library(astsa)
lag2.plot(r1, 33, max.lag = 4)
plot(r1,r3,type='p',pch=16,sub = "(a) Variables Originales")
acf(r1)
acf(r3)
library(forecast)
forecast::Ccf(r1, r3, lag.max = 48)
library(astsa)
lag2.plot(r1, r3, max.lag = 4)
knitr::opts_chunk$set(echo = TRUE)
library(TSstudio)
tipos88 <- read.table("tipos88.dat", quote="\"", comment.char="")
Intanual=tipos88$V5  #Tipo de interés Anual
plot(as.ts(Intanual))
camrelintanual=log(Intanual[2:length(Intanual)]/Intanual[1:(length(Intanual)-1)])
sercamrelint=ts(camrelintanual,start=c(1988,01),frequency=12)
sercamrelint
plot(sercamrelint,main="Cambios relativos")
plot.ts(sercamrelint)
acf(sercamrelint,ci.type='ma')
acf(sercamrelint,type='partial')
str(sercamrelint)
head(time(sercamrelint),20)
head(cycle(sercamrelint),15)
frequency(sercamrelint)
deltat(sercamrelint)###en este caso es 1/12
ts_info(sercamrelint)
acf(sercamrelint)
acf(sercamrelint,plot = F)
acf(sercamrelint,lag.max = 10)
acf(sercamrelint,lag.max = 100)
acf(sercamrelint,lag.max = 100,type = "covariance")
acf(sercamrelint,lag.max = 100,type = "covariance",plot = F)
camrelintanual=log(Intanual[2:length(Intanual)]/Intanual[1:(length(Intanual)-1)])
sercamrelint=ts(camrelintanual,start=c(1988,01),frequency=12)
sercamrelint
plot(sercamrelint,main="Cambios relativos")
plot.ts(sercamrelint)
acf(sercamrelint,lag.max = 100)
acf(sercamrelint,ci.type='ma')
acf(sercamrelint,type='partial')
str(sercamrelint)
head(time(sercamrelint),20)
head(cycle(sercamrelint),15)
frequency(sercamrelint)
deltat(sercamrelint)###en este caso es 1/12
ts_info(sercamrelint)
camrelintanual=log(Intanual[2:length(Intanual)]/Intanual[1:(length(Intanual)-1)])
sercamrelint=ts(camrelintanual,start=c(1988,01),frequency=12)
sercamrelint
plot(sercamrelint,main="Cambios relativos")
plot.ts(sercamrelint)
acf(sercamrelint,lag.max = 100)
acf(sercamrelint,ci.type='ma')
acf(sercamrelint,type='partial')
str(sercamrelint)
head(time(sercamrelint),20)
head(cycle(sercamrelint),15)
frequency(sercamrelint)
deltat(sercamrelint)###en este caso es 1/12
ts_info(sercamrelint)
camrelintanual=log(Intanual[2:length(Intanual)]/Intanual[1:(length(Intanual)-1)])
sercamrelint=ts(camrelintanual,start=c(1988,01),frequency=12)
sercamrelint
plot(sercamrelint,main="Cambios relativos")
plot.ts(sercamrelint)
acf(sercamrelint,lag.max = 20)
acf(sercamrelint,ci.type='ma')
acf(sercamrelint,type='partial')
str(sercamrelint)
head(time(sercamrelint),20)
head(cycle(sercamrelint),15)
frequency(sercamrelint)
deltat(sercamrelint)###en este caso es 1/12
ts_info(sercamrelint)
Colcap<- read_excel("Datos históricos COLCAP-3.xlsx")
library(xts)
library(readxl)
data("Michigan_CS")###De TSstudio
ts_info(Michigan_CS)
class(Michigan_CS) #xts y zoo, lo cual es estándar en objeto xts.
frequency(Michigan_CS)
is.regular(Michigan_CS, strict = TRUE)
head(Michigan_CS)
plot(Michigan_CS)
Colcap<- read_excel("Datos históricos COLCAP-3.xlsx")
TsColCap=xts(Colcap$Ultimo, order.by = as.Date(Colcap$Fecha, "%Y-%m-%d"))
plot(TsColCap)
acf(TsColCap)
str(TsColCap)
acf(sercamrelint,lag.max = 20)
acf(sercamrelint,lag.max = 5,plot = F)
acf(sercamrelint,lag.max = 20)
acf(sercamrelint,lag.max = 5,plot = F,type = "covariance")
knitr::opts_chunk$set(echo = TRUE)
T=500
IID=rnorm(T,4,1)
ts_IID=as.ts(IID)
ts_IID
plot(ts_IID)
acf(ts_IID,lag.max = sqrt(T))
pacf(ts_IID)  ###La autocorrelación Parcial mide la asociación estadística en X_{k+1} y X_{1} ajustado por intervención de las observaciones X_2,...,X_k.
k=2
T=2000+2*k
a=rnorm(2*k+1,5,1)
Zt=rnorm(T,0,1) ##proceso IID
Xt=rep(0,T)
for(t in (k+1):(T-k))
{
Xt[t-k]=a%*%Zt[(t-k):(t+k)]
}
filtro_lin=as.ts(Xt)
plot(filtro_lin)
acf(filtro_lin)
pacf(filtro_lin)
T=1000
sigma=2
X_t=rnorm(T,0,sigma)
S_t=as.ts(cumsum(X_t))
plot(S_t)
acf(S_t)
pacf(S_t)
r1=read.table("w-gs1yr.txt",header=T)[,4]
tsr1=ts(r1,start=1962+5/365.25,frequency=365.25/7)
tsc1=diff(tsr1)
acf(tsc1)
sp5=as.ts(scan(file="SP500.txt"))
sp5
acf(sp5)
acf(sp5^2)
library(readxl)
library(tidyverse)
library(tidyquant)
library(timetk)
library(tsibble)
library(feasts)
Lluvia <- read_excel("Lluvia.xlsx", col_types = c("date", "numeric"))
Lluvia%>% timetk::plot_time_series(Fecha, lluvia, .interactive = TRUE)
Lluvia%>%timetk::plot_acf_diagnostics(
Fecha, lluvia,               # ACF & PACF
.lags = 60,          # 7-Days of hourly lags
.interactive = FALSE)
acf(Lluvia$lluvia,lag.max = 60)
df_tsibble_Lluvia=Lluvia
df_tsibble_Lluvia$Fecha<-tsibble::yearmonth(Lluvia$Fecha)
tbl_ts_lluvia=tsibble::as_tsibble(df_tsibble_Lluvia)
tbl_ts_lluvia %>%
autoplot(lluvia) +
labs(y = "Promedio de lluvias en Colombia mensual")
tbl_ts_lluvia %>% ACF(lluvia,lag_max =60) %>% autoplot()
T=500
IID=rnorm(T,4,1)
ts_IID=as.ts(IID)
ts_IID
plot(ts_IID)
acf(ts_IID,lag.max = sqrt(T))
pacf(ts_IID)  ###La autocorrelación Parcial mide la asociación estadística en X_{k+1} y X_{1} ajustado por intervención de las observaciones X_2,...,X_k.
T=500
IID=rnorm(T,4,1)
ts_IID=as.ts(IID)
ts_IID
plot(ts_IID)
acf(ts_IID,lag.max = sqrt(T))
pacf(ts_IID)  ###La autocorrelación Parcial mide la asociación estadística en X_{k+1} y X_{1} ajustado por intervención de las observaciones X_2,...,X_k.
T=500
IID=rnorm(T,4,1)
ts_IID=as.ts(IID)
ts_IID
plot(ts_IID)
acf(ts_IID,lag.max = T-1)
pacf(ts_IID)  ###La autocorrelación Parcial mide la asociación estadística en X_{k+1} y X_{1} ajustado por intervención de las observaciones X_2,...,X_k.
k=2
T=2000+2*k
a=rnorm(2*k+1,5,1)
Zt=rnorm(T,0,1) ##proceso IID
Xt=rep(0,T)
for(t in (k+1):(T-k))
{
Xt[t-k]=a%*%Zt[(t-k):(t+k)]
}
filtro_lin=as.ts(Xt)
plot(filtro_lin)
acf(filtro_lin)
pacf(filtro_lin)
k=2
T=2000+2*k
a=rnorm(2*k+1,5,1)
Zt=rnorm(T,0,1) ##proceso IID
Xt=rep(0,T)
for(t in (k+1):(T-k))
{
Xt[t-k]=a%*%Zt[(t-k):(t+k)]
}
filtro_lin=as.ts(Xt)
plot(filtro_lin)
acf(filtro_lin)
pacf(filtro_lin)
T=1000
sigma=2
X_t=rnorm(T,0,sigma)
S_t=as.ts(cumsum(X_t))
plot(S_t)
acf(S_t)
pacf(S_t)
acf(S_t,lag.max = 500)
T=1000
sigma=2
X_t=rnorm(T,0,sigma)
S_t=as.ts(cumsum(X_t))
plot(S_t)
acf(S_t,lag.max = 500)
pacf(S_t)
pacf(S_t,plot = F)
r1=read.table("w-gs1yr.txt",header=T)[,4]
tsr1=ts(r1,start=1962+5/365.25,frequency=365.25/7)
tsc1=diff(tsr1)
acf(tsc1)
r1=read.table("w-gs1yr.txt",header=T)[,4]
tsr1=ts(r1,start=1962+5/365.25,frequency=365.25/7)
tsc1=diff(tsr1)
plot(tsc1)
acf(tsc1)
r1=read.table("w-gs1yr.txt",header=T)[,4]
tsr1=ts(r1,start=1962+5/365.25,frequency=365.25/7)
tsc1=diff(tsr1)
plot(tsc1)
acf(tsc1)
pacf(tsc1)
sp5=as.ts(scan(file="SP500.txt"))
sp5
acf(sp5)
acf(sp5^2)
sp5=as.ts(scan(file="SP500.txt"))
sp5
plot(sp5)
acf(sp5)
acf(sp5^2)
sp5=as.ts(scan(file="SP500.txt"))
sp5
plot(sp5)
acf(sp5)
acf(sp5^2)
library(readxl)
library(tidyverse)
library(tidyquant)
library(timetk)
library(tsibble)
library(feasts)
Lluvia <- read_excel("Lluvia.xlsx", col_types = c("date", "numeric"))
Lluvia%>% timetk::plot_time_series(Fecha, lluvia, .interactive = TRUE)
Lluvia%>%timetk::plot_acf_diagnostics(
Fecha, lluvia,               # ACF & PACF
.lags = 60,          # 7-Days of hourly lags
.interactive = FALSE)
acf(Lluvia$lluvia,lag.max = 60)
df_tsibble_Lluvia=Lluvia
df_tsibble_Lluvia$Fecha<-tsibble::yearmonth(Lluvia$Fecha)
tbl_ts_lluvia=tsibble::as_tsibble(df_tsibble_Lluvia)
tbl_ts_lluvia %>%
autoplot(lluvia) +
labs(y = "Promedio de lluvias en Colombia mensual")
tbl_ts_lluvia %>% ACF(lluvia,lag_max =60) %>% autoplot()
knitr::opts_chunk$set(echo = TRUE)
variable_nueva<-"bloque de código"
print(variable_nueva)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(reticulate)
###Nos ubicamos en el ambiente dentro de la terminal y damos which python y copiamos la ruta "/opt/anaconda3/envs/Python38andR/bin/python"
##"/Users/macbook/opt/anaconda3/envs/Ambiente38/bin/python"
use_python("/Users/macbook/opt/anaconda3/envs/Ambiente38/bin/python")
#use_virtualenv("~/Python38andR")
py_config()
pd <- import("pandas")
arreglo<-pd$array(c(1, 2, 3))
print(arreglo)
arreglo$shape
reticulate::repl_python()
data("AirPassengers")
plot(AirPassengers)
reticulate::repl_python()
py$data
library(ggplot2)
ggplot2::ggplot(data = py$data,aes(x=Month,y=NPassengers) )+geom_line()
#use_virtualenv("~/Python38andR")
py_config()
pd <- import("pandas")
arreglo<-pd$array(c(1, 2, 3))
print(arreglo)
arreglo$shape
reticulate::repl_python()
